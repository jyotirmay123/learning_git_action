name: learn-github-actions
on: 
  schedule: [{cron: '00 06 * * *'}]
  pull_request: { branches: [master, main] }
  push: { branches: [master, main] }
  issue_comment:
    types: [created]
jobs:   
  check-bats-version:
    runs-on: ubuntu-latest
    steps:
      - name: Pingback Init
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v3
        id: pingback
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: json
          script: |
            return github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "> [ ${{ github.event.comment.body }} ]( ${{ github.event.comment.html_url }} ) \n \n \
              -- [ ${{ github.workflow }} ]( https://github.com/7Learnings/repo/actions/runs/${{github.run_id }} ) \n \n "
            })

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
          STEP_CTX: ${{ toJSON(env) }}
        run: echo "$GITHUB_CONTEXT" && echo "$STEP_CTX"

      - name: Pingback Status Update
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v3
        env:
          STEP_CONTEXT: ${{ toJSON(steps.pingback.outputs) }}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          run: |
            COMMENT_ID=$(echo $STEP_CONTEXT | jq '.result | fromjson' | jq .data.id)
            echo $COMMENT_ID
            github.issues.updateComment({
              comment_id: ${COMMENT_ID},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: " > [ ${{ github.event.comment.body }} ]( ${{ github.event.comment.html_url }} ) \n \n \
              -- [ ${{ github.workflow }} ]( https://github.com/7Learnings/repo/actions/runs/${{github.run_id }} ) \n \n \
              -- run **${{ job.status }}**(event: ${{ github.event_name }}) \n \n "
            })
